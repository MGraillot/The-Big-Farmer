name: Automation test

on: [push]

jobs:
  flake8:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 fichier_test_jeu.py --max-complexity=10 --max-line-length=88

  pytest:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

  black:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Verify code
        run: |
          black test_farmer.py --check

      - name: "Pytest Coverage Example"
      - description: "Use Pytest to show test coverage."
      - inputs:
          codedirectory:
            description: "The directory containing the source code."
            default: "The project root i.e '.'"
          testdirectory:
            description: "The directory containing the tests."
                default: "tests\\"
          pycovconfigfile:
            description: "The pycov configuration file"
                default: ".coveragerc"
          pytestconfigfile:
            description: "The pytest configuration file."
                default: "setup.cfg"
      - outputs:
          testcoverage:
            description: "The Test coverage."
      - runs:
          using: "docker"
          image: "Dockerfile"
      - branding:
          icon: 'award'
          color: 'green'